<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- userDao, userService -->

	<!-- bean : 스프링 빈을 선언할 때 사용 id : 스프링 컨테이너에서 관리할때 사용할 스프링 빈의 이름 - 중복이 되면 
		안된다 class : 해당 스프링 빈을 생성하기 위한 구현체 클래스 full name -->

	<!-- userDao 스프링 빈 선언 UserDaoImpl userDao = new UserDaoImpl(); 객체를 내가 만드는게 
		아니라 스프링 프레임 워크에서 만듬 -->
	<bean id="userDao" class="kr.or.ddit.user.repository.UserDaoImpl" />


	<!-- userService 스프링 빈 선언 UserService userSerivce = new UserSerivceImpl(); 
		userService.getUser("brown"); ==> 에러 property ==> field, setter value : 문자열, 
		숫자 ref : 다른 스프링 빈, 주입 받고 싶은 스프링 빈 이름을 기술 property 엘레멘트를 이용하여 다른 스프링 빈을 (DI-Dependency 
		Injection)주입 UserService userSerivce = new UserSerivceImpl(); userService.setUserDao(userDao); -->
	<bean id="userService"
		class="kr.or.ddit.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
	</bean>

	<!-- 생성자 주입 -->
	<bean id="userServiceCons"
		class="kr.or.ddit.user.service.UserServiceImpl">
		<constructor-arg ref="userDao" />
	</bean>
	<!-- prototype : 해당 빈을 dl,di할 때마다 매번 새롭게 만든 객체를 반환 -->
	<bean id="userServicePrototype"
		class="kr.or.ddit.user.service.UserServiceImpl" scope="prototype">

		<property name="userDao" ref="userDao" />
	</bean>

	
	
	<context:property-placeholder location="classpath:/kr/or/ddit/config/db/dbinfo.properties" />
	<bean id="dbConfig" class="kr.or.ddit.ioc.DbConfig" >
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
						
	</bean> 

</beans>











